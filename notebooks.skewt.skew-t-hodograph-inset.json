{"version":2,"kind":"Notebook","sha256":"ce0cd5b26bb40a3bbeba5f20f3875ce0bb2c8720ae2da92861f8b5578084732b","slug":"notebooks.skewt.skew-t-hodograph-inset","location":"/notebooks/skewt/Skew-T_Hodograph_Inset.ipynb","dependencies":[],"frontmatter":{"title":"Hodograph Inset","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"MetPy Maintainers","given":"MetPy","family":"Maintainers"},"name":"MetPy Maintainers","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/metpy-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/projectpythia/metpy-cookbook/blob/main/notebooks/skewt/Skew-T_Hodograph_Inset.ipynb","exports":[{"format":"ipynb","filename":"Skew-T_Hodograph_Inset.ipynb","url":"/metpy-cookbook/build/Skew-T_Hodograph_Ins-caa48bb82f023e1f7f3fc91edef77d07.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Layout a Skew-T plot with a hodograph inset into the plot.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bSjGcxO23b"}],"key":"aUOFmw5OmI"}],"key":"p3JLuRZ2u7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZjeNAuXuKX"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"XGp0U0YCsp"}],"key":"XvkeDUMtgA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nimport metpy.calc as mpcalc\nfrom metpy.cbook import get_test_data\nfrom metpy.plots import add_metpy_logo, Hodograph, SkewT\nfrom metpy.units import units\n\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes","key":"TSq0o64crF"},{"type":"output","id":"QQqX8jEogefy32ZSMK-3V","data":[],"key":"FTSFlU7GC2"}],"key":"M1cEWSX0d7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Obtain Data and Format","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q1Myo1PpgP"}],"identifier":"obtain-data-and-format","label":"Obtain Data and Format","html_id":"obtain-data-and-format","implicit":true,"key":"M8JxI058dK"}],"key":"U8kmaJfsPD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Upper air data can be obtained using the siphon package, but for this example we will use some of MetPyâ€™s sample data.\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c4Npcsw8XZ"},{"type":"inlineCode","value":"as_file_obj=False), skiprows=5, usecols=[0, 1, 2, 3, 6, 7], names=col_names)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lFeMwjxdgk"},{"type":"text","value":" is necessary due to the formatting of the MetPy sample data. This formatting is not needed when using upper air data obtained via Siphon. Obtaining data with Siphon will be covered in a later notebook.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mNdcd86qmE"}],"key":"GLPFPd9lxK"}],"key":"r9YUKrGyFC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"col_names = ['pressure', 'height', 'temperature', 'dewpoint', 'direction', 'speed']\n\nsounding_data = pd.read_fwf(get_test_data('may4_sounding.txt', as_file_obj=False),\n                 skiprows=5, usecols=[0, 1, 2, 3, 6, 7], names=col_names)\n\n# Drop any rows with all not a number (NaN) values for temperature, dewpoint, and winds\nsounding_data = sounding_data.dropna(subset=('temperature', 'dewpoint', 'direction', 'speed'\n                       ), how='all').reset_index(drop=True)","key":"lowQ3mQ9S3"},{"type":"output","id":"RlhAebbZjakLOMyH1loHg","data":[{"output_type":"stream","name":"stderr","text":"Downloading file 'may4_sounding.txt' from 'https://github.com/Unidata/MetPy/raw/v1.7.0/staticdata/may4_sounding.txt' to '/home/runner/.cache/metpy/v1.7.0'.\n"}],"key":"a87IiAkToo"}],"key":"eCN5Eqgvut"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Assign Units","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eQHinI70oJ"}],"identifier":"assign-units","label":"Assign Units","html_id":"assign-units","implicit":true,"key":"PWgInc4YSX"}],"key":"cK0hGQ5nzH"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will pull the data out of the example dataset into individual variables and assign units. This is explained in further detain in the Simple Sounding notebook and in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VGUrdkMZ5m"},{"type":"link","url":"https://unidata.github.io/MetPy/latest/tutorials/unit_tutorial.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Metpy documentation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RC7fDP6Tye"}],"urlSource":"https://unidata.github.io/MetPy/latest/tutorials/unit_tutorial.html","key":"b5nTDISD7J"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gXFaujQ2hs"}],"key":"MEeeF7rzdx"}],"key":"OOnd2lyEuL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"pres = sounding_data['pressure'].values * units.hPa\ntemp = sounding_data['temperature'].values * units.degC\ndewpoint = sounding_data['dewpoint'].values * units.degC\nwind_speed = sounding_data['speed'].values * units.knots\nwind_dir = sounding_data['direction'].values * units.degrees\nu, v = mpcalc.wind_components(wind_speed, wind_dir)","key":"WJHqnSM1M4"},{"type":"output","id":"adJlnYFFRS_nQYyFK96Vq","data":[],"key":"ERKuLLLaiq"}],"key":"TWs6Sua8Dr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create figure and grid for plots\nfig = plt.figure(figsize=(9, 9))\nskew = SkewT(fig, rotation=45)\n\n# Plot temperature and dewpoint lines\nskew.plot(pres, temp, 'red')\nskew.plot(pres, dewpoint, 'green')\n\n# Plot wind barbs\nmy_interval = np.arange(100, 1000, 50) * units('hPa')\nix = mpcalc.resample_nn_1d(pres, my_interval)\nskew.plot_barbs(pres[ix], u[ix], v[ix])\n\n# Improve labels and set axis limits\nskew.ax.set_xlabel('Temperature (\\N{DEGREE CELSIUS})')\nskew.ax.set_ylabel('Pressure (hPa)')\nskew.ax.set_ylim(1000, 100)\nskew.ax.set_xlim(-30, 40)\n\n# Add the relevant special lines\nskew.plot_dry_adiabats(t0=np.arange(233, 533, 10) * units.K, alpha=0.25, color='orangered')\nskew.plot_moist_adiabats(t0=np.arange(233, 400, 5) * units.K, alpha=0.25, color='tab:green')\nskew.plot_mixing_lines(pressure=np.arange(1000, 99, -25) * units.hPa, linestyle='dotted', color='tab:blue')\n\n# Create a hodograph\nax_hod = inset_axes(skew.ax, '35%', '35%', loc=1)\nh = Hodograph(ax_hod, component_range=80)\nh.add_grid(increment=20)\nh.plot_colormapped(u, v, pres)\n\n# Add the MetPy logo!\nfig = plt.gcf()\nadd_metpy_logo(fig, 110, 650, size='small');\n\n# Add title\nskew.ax.set_title('Advanced Sounding with Hodograph Inset');","key":"wNcFqLlL6p"},{"type":"output","id":"Rh7MtV1qBSToN3x5AhHwr","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/metpy-cookbook/lib/python3.13/site-packages/scipy/integrate/_ivp/base.py:23: UserWarning: Saturation mixing ratio is undefined for some requested pressure/temperature combinations. Total pressure must be greater than the water vapor saturation pressure for liquid water to be in equilibrium.\n  return np.asarray(fun(t, y), dtype=dtype)\n/home/runner/micromamba/envs/metpy-cookbook/lib/python3.13/site-packages/metpy/calc/thermo.py:1633: RuntimeWarning: invalid value encountered in power\n  * (mpconsts.nounit.T0 / temperature) ** heat_power\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 900x900 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"90ce916a11d4419be9375a477624bd3e","path":"/metpy-cookbook/build/90ce916a11d4419be9375a477624bd3e.png"}}}],"key":"tuc2DnK9bC"}],"key":"gHqpJvEOyK"}],"key":"mieCgHWmYW"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Skew-T Analysis","url":"/notebooks/skewt/skew-t-analysis","group":"The MetPy Gallery"},"next":{"title":"Skew-T with Complex Layout","url":"/notebooks/skewt/skew-t-layout-hodograph","group":"The MetPy Gallery"}}},"domain":"http://localhost:3000"}